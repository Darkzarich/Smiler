version: '3.9'

x-common-variables: &common-variables
  # MongoDB
  DB_PORT: ${DB_PORT:-27017}
  MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  # Backend+Frontend
  BACKEND_HOST_PORT: ${BACKEND_HOST_PORT}

services:
  frontend: 
    # If both image and build specified then it will try to get the image from Docker Hub 
    # and if it doesn't exist there it will build a new one using Dockerfile from provided folder
    image: darkzarich/smiler-frontend
    build: ./client
    container_name: smiler-frontend
    ports:
      - ${FRONTEND_PORT}:80
    environment:
      API_URL: ${API_URL}
      FRONTEND_PORT: ${FRONTEND_PORT}
      <<: *common-variables
    depends_on:
      - backend
    networks:
      - app
  backend:
    image: darkzarich/smiler-backend
    build: ./server
    container_name: smiler-backend
    ports:
      - ${BACKEND_HOST_PORT}:${BACKEND_PORT}
    environment:
      NODE_ENV: production
      BACKEND_PORT: ${BACKEND_PORT}
      SESSION_SECRET: ${SESSION_SECRET}
      FRONT_ORIGIN_REMOTE: ${FRONT_ORIGIN_REMOTE}
      DB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@db:${DB_PORT}/${MONGO_INITDB_DATABASE}?authSource=admin
      <<: *common-variables
    restart: always
    volumes:
      - /data/smiler/logs:/usr/src/app/logs
      - /data/smiler/uploads:/usr/src/app/uploads
    networks:
      - app
      - db
    depends_on:
      db: 
        condition: service_healthy
  db:
    image: mongo:5.0.10
    restart: always
    container_name: smiler-db
    volumes:
      - /usr/src/smiler/db:/data/db
    networks:
      - db
    environment:
      <<: *common-variables
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh db:${DB_PORT} --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  app:
  db: