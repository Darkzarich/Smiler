{
  "openapi": "3.0.0",
  "info": {
    "title": "Smiler Api",
    "version": "1.0.0",
    "description": "Smiler is my own MEVN (MongoDB, Express, Vue.js, Node.js) site similar to reddit.com or 9gag.com (mostly takes many known features) with many different and awesome features, open Swagger API docs, tests, interesting tools and more. Main reason of making this site is fun and learning new things while making it"
  },
  "servers": [
    {
      "url": "https://smiler-api.darkzarich.com/api",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000/api",
      "description": "Local server"
    }
  ],
  "paths": {
    "/auth/current": {
      "get": {
        "summary": "Check login state",
        "description": "Return user auth status",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthState"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Sign in to the application",
        "tags": ["Auth"],
        "requestBody": {
          "description": "user's credential",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthState"
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "JSESSIONID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid."
          },
          "422": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "Sign up a user",
        "tags": ["Auth"],
        "description": "Sign up a new user and return its cookie token (connect.sid)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["login", "password", "confirm", "email"],
                "properties": {
                  "login": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 10
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "confirm": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthState"
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "JSESSIONID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Log out the current user",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "tags": ["Auth"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          }
        }
      }
    },
    "/comments": {
      "get": {
        "summary": "Get user's comments or comments in a post",
        "tags": ["Comments"],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "type": "number"
            },
            "description": "The number of items to skip before starting to collect the result set."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "maximum": 30,
              "minimum": 1,
              "type": "number"
            },
            "description": "The numbers of items to return."
          },
          {
            "in": "query",
            "name": "author",
            "schema": {
              "type": "string"
            },
            "description": "user which comments you want to see"
          },
          {
            "in": "query",
            "name": "post",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "post id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "pages": {
                      "type": "number",
                      "default": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      },
      "post": {
        "summary": "Create a comment",
        "tags": ["Comments"],
        "description": "Create a comment to a post",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["post"],
                "properties": {
                  "body": {
                    "type": "string",
                    "example": "My body is dry"
                  },
                  "post": {
                    "type": "string",
                    "example": "5d546c95c0f3a272b2062205"
                  },
                  "parent": {
                    "type": "string",
                    "example": "5d55daa034c1991762147c2b"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/comments/{id}": {
      "put": {
        "summary": "Edit comment",
        "tags": ["Comments"],
        "description": "Edit comment by its `id`",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      },
      "delete": {
        "tags": ["Comments"],
        "summary": "Delete comment",
        "description": "Delete comment by its `id`",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      }
    },
    "/comments/{id}/vote": {
      "put": {
        "summary": "Change rate on comment",
        "description": "Changes rate for comment. `negative` decides direction. You can't rate comment again before deleting previous rate",
        "tags": ["Comments"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "negative": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "delete": {
        "summary": "Unvote a comment",
        "description": "Unvotes an already voted comment",
        "tags": ["Comments"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": ["Posts"],
        "description": "Get all posts",
        "summary": "Get all posts",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100,
              "maximum": 100,
              "minimum": 1
            },
            "description": "posts per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "description": "Sorts posts by field `sort`, default descending. `-<sortField>` - ascending sort.",
            "examples": {
              "descending": {
                "summary": "Example of descending sort by field `createdAt`",
                "value": "-createdAt"
              },
              "ascending": {
                "summary": "Example of ascending sort by field `rating`",
                "value": "rating"
              }
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "number",
              "default": 0
            },
            "description": "offset from element"
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": "form"
          },
          {
            "in": "query",
            "name": "author",
            "schema": {
              "type": "string"
            },
            "description": "By author"
          },
          {
            "in": "query",
            "name": "title",
            "description": "Search post by title",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dateFrom",
            "description": "Show posts posted after `dateFrom`",
            "schema": {
              "type": "string"
            },
            "example": "2019-08-21T22:05:44.788Z"
          },
          {
            "in": "query",
            "name": "dateTo",
            "description": "Show posts posted before `dateTo`",
            "schema": {
              "type": "string"
            },
            "example": "2019-09-21T22:05:44.788Z"
          },
          {
            "in": "query",
            "name": "ratingFrom",
            "description": "Show posts posted with rating above `ratingFrom`",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ratingTo",
            "description": "Show posts posted with rating below `ratingTo`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    },
                    "pages": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Posts"],
        "description": "Create a post with `title` and `sections`. Creating a post clears the template.",
        "summary": "create a post",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "sections"],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "sections": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PostSection"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/posts/feed": {
      "get": {
        "tags": ["Posts"],
        "description": "Get feed",
        "summary": "Get feed",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "number",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            },
            "description": "posts per page"
          },
          {
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "number",
              "default": 0
            },
            "description": "offset from element"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    },
                    "pages": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/posts/{id}": {
      "put": {
        "tags": ["Posts"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "description": "Edit a post. You can edit a post only within certain time after it is created",
        "summary": "edit a post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sections": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PostSection"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "delete": {
        "tags": ["Posts"],
        "summary": "delete a post by its Id",
        "description": "delete a post by its `Id`",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "get": {
        "tags": ["Posts"],
        "summary": "get a post by its slug",
        "description": "Get a post by its `slug`",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/posts/upload": {
      "post": {
        "tags": ["Posts"],
        "summary": "upload picture",
        "description": "Upload the picture to template. Allowed extensions: `jpg|jpeg|png|gif`",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "picture": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSectionImage"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "413": {
            "$ref": "#/components/responses/RequestEntityTooLarge"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/posts/{id}/vote": {
      "put": {
        "summary": "Change vote on post",
        "description": "Changes vote for post. `negative` decides direction. You can't rate post again before deleting previous rate",
        "tags": ["Posts"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "negative": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "delete": {
        "summary": "Unvote a post",
        "description": "Delete already existing rate for user for post",
        "tags": ["Posts"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      }
    },
    "/tags/{tag}/follow": {
      "put": {
        "tags": ["Tags"],
        "summary": "Follow the tag",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      },
      "delete": {
        "tags": ["Tags"],
        "summary": "Unfollow the tag",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/users/{login}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user profile",
        "description": "Get user profile",
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users/me": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user info",
        "description": "Update user info with payload",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": {
                    "type": "string",
                    "maxLength": 300
                  },
                  "avatar": {
                    "type": "string",
                    "maxLength": 150,
                    "description": "URL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/users/{login}/template": {
      "get": {
        "summary": "Get user saved template",
        "tags": ["Users"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "description": "Returns user's saved template for post with `title` and `sections`",
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User name"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sections": {
                      "description": "Post sections",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostSection"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "summary": "Update user template",
        "tags": ["Users"],
        "description": "Update user post template `sections`, `title` and `tags`",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sections": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PostSection"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/users/me/settings": {
      "get": {
        "tags": ["Users"],
        "summary": "Get the current user's settings",
        "description": "Gets the current user's settings: bio, followed users, tags etc",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettings"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users/{id}/follow": {
      "put": {
        "tags": ["Users"],
        "summary": "Follow a user",
        "description": "Follow a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Unfollow a user",
        "description": "Unfollow a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/users/{login}/template/{hash}": {
      "delete": {
        "tags": ["Users"],
        "summary": "Delete section file picture",
        "description": "Deletes file picture section and the image from the server. Works only for sections with `isFile` set as true",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User name"
          },
          {
            "in": "path",
            "name": "hash",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Section hash"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthState": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "isAuth": {
            "type": "boolean"
          },
          "rating": {
            "type": "number"
          },
          "followersAmount": {
            "type": "number"
          },
          "tagsFollowed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "post": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "createdAt": {
            "type": "string",
            "example": "2019-08-16T01:04:02.504Z"
          },
          "children": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Comment"
                },
                {
                  "$ref": "#/components/schemas/CommentDeleted"
                }
              ]
            }
          },
          "rating": {
            "type": "number"
          },
          "rated": {
            "$ref": "#/components/schemas/UserRate"
          }
        }
      },
      "CommentDeleted": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "post": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "parent": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "example": "2019-08-16T01:04:02.504Z"
          },
          "children": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Comment"
                },
                {
                  "$ref": "#/components/schemas/CommentDeleted"
                }
              ]
            }
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "commentCount": {
            "description": "number of comments in a post",
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostSection"
            }
          },
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "slug": {
            "type": "string",
            "example": "My-post-title-d2k5g8"
          },
          "createdAt": {
            "type": "string",
            "example": "2019-08-21T22:05:44.788Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2019-09-22T14:02:14.532Z"
          },
          "rating": {
            "type": "number"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rated": {
            "$ref": "#/components/schemas/UserRate"
          }
        }
      },
      "UserRate": {
        "type": "object",
        "properties": {
          "isRated": {
            "type": "boolean"
          },
          "negative": {
            "type": "boolean"
          }
        }
      },
      "PostSection": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PostSectionText"
          },
          {
            "$ref": "#/components/schemas/PostSectionImage"
          },
          {
            "$ref": "#/components/schemas/PostSectionVideo"
          }
        ]
      },
      "PostSectionText": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text"]
          },
          "content": {
            "type": "string",
            "maxLength": 4500
          },
          "hash": {
            "type": "string"
          }
        }
      },
      "PostSectionImage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["pic"]
          },
          "url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "isFile": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PostSectionVideo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["vid"]
          },
          "url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          }
        }
      },
      "Author": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "user123"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "bio": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "followersCount": {
            "type": "number"
          },
          "isFollowed": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Author"
            }
          },
          "bio": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "required": ["message"]
      },
      "OK": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "example": true
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    },
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Not enough rights",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "RequestEntityTooLarge": {
        "description": "Request entity too large",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "OK": {
        "description": "Everything went alright",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OK"
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "Method is not available due to certain restrictions",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Actions related to user authentication"
    },
    {
      "name": "Comments",
      "description": "Actions with comments"
    },
    {
      "name": "Posts",
      "description": "Actions with posts"
    },
    {
      "name": "Users",
      "description": "Actions with Users collection"
    }
  ]
}
